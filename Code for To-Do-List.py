# -*- coding: utf-8 -*-
"""ProblemSet2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-6GVVh-EfU8B8ZfFoSoKGCfaS3MM_JLE
"""

import json

def load_tasks():
  try:
    with open('tasks.json', 'r') as f:
      return json.load(f)
  except FileNotFoundError:
    return []

def save_tasks(tasks):
  with open('tasks.json', 'w') as f:
    json.dump(tasks, f, indent=4)

def add_task(tasks):
  task = input("Enter a new Task: ")
  new_task = {"id": len(tasks)+1, "task": task, "completed": False}
  tasks.append(new_task)
  save_tasks(tasks)

def update_task(tasks):
  task_id = int(input("Enter the ID of the task to update: "))
  for task in tasks:
    if task["id"] == task_id:
      new_task = input("Enter the new task: ")
      task["task"] = new_task
      save_tasks(tasks)
      return
  print("Task is not found")

def delete_task(tasks):
  task_id = int(input("Enter the ID of the Task to delete: "))
  for i, task in enumerate(tasks):
    if task["id"] == task_id:
      del tasks[i]
      save_tasks(tasks)
      return
  print("Task is not Found")

def mark_completed(tasks):
  task_id = int(input("Enter the ID of task to mark as completed: "))
  for task in tasks:
    if task["id"] == task_id:
      task["completed"] = True
      save_tasks(tasks)
      return
  print("Task is not found")

def display_tasks(tasks):
  for task in tasks:
    status = "Completed" if task['completed'] else "Pending"
    print(f"{task['id']} {task['task']} ({status})")

tasks = load_tasks()

add_task(tasks)

display_tasks(tasks)

mark_completed(tasks)

display_tasks(tasks)